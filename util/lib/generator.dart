import 'package:recase/recase.dart';

import 'helpers.dart';
import 'icon_metadata_model.dart';

/// Generates a static method definition for a given [icon] and [style].
String generateDefinition(IconMetadata icon, String style) {
  // Normalize the icon name and get the raw SVG string for the specified style.
  final String iconName =
      normalizeIconName(icon.name, style, icon.styles.length);
  final String svgString = formatSvgString(icon.svg[style]['raw']);

  // Define the parameters for the generated method.
  const String colorParam = 'Color? color';
  const String sizeParam = 'double size = 20.0';
  final String semanticsParam = "String semanticsLabel = '$iconName',";
  final String params = [colorParam, sizeParam, semanticsParam].join(', ');

  // Generate the method definition with the given parameters.
  return '''
    static FaSvgIcon $iconName({$params}) {
      return FaSvgIcon(
        '$svgString',
        color: color,
        size: size,
        semanticsLabel: semanticsLabel,
      );
    }
  ''';
}

/// Generates the documentation for a given Font Awesome icon in a specific style.
///
/// The documentation includes the [style] and label of the [icon], as well as a link to the icon's page on the Font Awesome website.
///
/// If the icon has [searchTerms] associated with it, they will also be included in the documentation.
///
/// Returns a string containing the generated documentation.
String generateDocumentation(IconMetadata icon, String style) {
  var doc = '/// ${style.sentenceCase} ${icon.label} icon\n'
      '///\n'
      '/// https://fontawesome.com/icons/${icon.name}?style=$style';

  if (icon.searchTerms.isNotEmpty) {
    doc += '\n/// ${icon.searchTerms.join(", ")}';
  }

  return doc;
}

/// Generates a Dart class containing static methods for each icon in the
/// given [metadata].
///
/// The generated class will have the following structure:
///
/// ```
/// class FontAwesomeSvgIcons {
///   // Static methods for each icon.
///   static FaSvgIcon iconName1({Color? color, double size = 20.0}) { ... }
///   static FaSvgIcon iconName2({Color? color, double size = 20.0}) { ... }
///   // ...
/// }
/// ```
///
List<String> generateIconDefinitionClass(List<IconMetadata> metadata) {
  final List<String> output = [
    'library font_awesome_svg_icons;',
    '',
    "import 'package:flutter/widgets.dart';",
    "import 'package:font_awesome_svg_icons/src/fa_svg_icon.dart';",
    "export 'package:font_awesome_svg_icons/src/fa_svg_icon.dart';",
  ];

  output.addAll([
    '',
    '// THIS FILE IS AUTOMATICALLY GENERATED!',
    '',
    'class FontAwesomeSvgIcons {',
  ]);

  if (metadata.isNotEmpty) {
    for (final IconMetadata icon in metadata) {
      for (final String style in icon.styles) {
        output.add(generateDocumentation(icon, style));
        output.add(generateDefinition(icon, style));
      }
    }
  }

  output.add('}');
  return output;
}
